@page "/AddSite"

@using RadioControlledDrivingSites.Shared
@using System.Runtime.CompilerServices
@using System.Timers

@inject HttpClient httpClient


<div class="container">

<div>
	<h3>Lisää ajopaikka</h3>
</div>
<br />

<EditForm Model="site" OnValidSubmit="SubmitForm">
	<DataAnnotationsValidator />
	<div class="row p-3 mb-2 bg-info rounded">
		<div class="col" style="font-family: 'Carter One', cursive;">Yleistä tietoa</div>
	</div>
	<div class="row">
		<div class="col-sm-3 p-1">Tätä tietoa käytetään ajopaikan löytämiseksi. Tiedot ovat pakollisia.</div>
		<div class="col-sm-9 inputs mt-2">
			<div class="row mb-2">
				<div class="col-sm-auto label m-1"><label class="form-label" for="name">Nimi</label></div>
				<div class="col-sm"><InputText class="form-control" @bind-Value="site.Name" id="name" /></div>
			</div>
			<div class="row mb-2">
				<div class="col-sm-auto label m-1"><label class="form-label" for="location">Paikka</label></div>
				<div class="col-sm"><InputTextArea class="form-control" @bind-Value="site.Location" id="location" placeholder="Esim. osoite, kaupunginosa, tms."></InputTextArea></div>
			</div>
			<div class="row mb-2">
				<div class="col-sm-auto label m-1">
					<label class="form-label" data-bs-toggle="tooltip" data-bs-placement="top" for="coordinates">Sijaintitieto</label>
					<i class="fa-solid fa-question" @onclick="ToggleModal"></i>
				</div>
				<div class="col-sm">
					<InputText class="form-control" @bind-Value="site.LongitudeLattitude" id="coorinates" placeholder="Klikkaa kysymysmerkkiä, jos et tiedä." />
				</div>
			</div>
		</div>
	</div>

	<div class="row p-3 mb-2 bg-info mt-3 rounded-3">
		<div class="col" style="font-family: 'Carter One', cursive;">Nippelitietoa</div>
	</div>
	<div class="row p-1">
		<div class="col-sm-3 p-1">Tämä on nippelitietoa, joka ei ole niin pakollista.</div>
		<div class="col-sm-9 inputs">
			<div class="row mb-2">
				<div class="col-sm-auto label mt-2"><label class="form-label" for="description">Kuvaus</label></div>
				<div class="col-sm"><InputTextArea class="form-control" @bind-Value="site.Description" id="description" placeholder="Vapaa kuvaus"></InputTextArea></div>
			</div>
			<div class="row mb-2">
				<div class="col-sm-auto label"><label class="form-label" for="environment">Alusta</label></div>
				<div class="col-sm"><InputText class="form-control" @bind-Value="site.Environment" id="environment" placeholder="Pääasiallinen ajoalusta"></InputText></div>
			</div>
		</div>
	</div>

	<div>
		<div class="btn-group btn-group-lg mt-3">
			@{
				if (submitIsActive)
				{
					<input type="submit" class="btn btn-primary btn-lg" value="Lisää paikka" />
				}
				else
				{
					<input type="submit" class="btn btn-primary btn-lg disabled" value="Lisää paikka" disabled />
				}
			}
			<input type="reset" @onclick="OnReset" class="btn btn-danger btn-lg" value="Tyhjennä" />
		</div>
	</div>

	@{
		if (wasSuccess == null && showSpinner)
		{
			<div class="aligning-spinner spinner-border text-primary mt-3" role="status">
				<span class="visually-hidden">Loading...</span>
			</div>
		}
		<div class="mt-3" style="color: red;">
			<ValidationSummary />
		</div>
		if (wasSuccess == true)
		{
			<div class="alert alert-success mt-3 @fadeAlert" role="alert">@message</div>
		}
		else if (wasSuccess == false)
		{
			<div class="alert alert-danger mt-3 @fadeAlert" role="alert">@message</div>
		}
	}
</EditForm>
</div>

@{
	if (showModal)
	{
		<HelpModal OnCloseCb="@ToggleModal"></HelpModal>
	}
}


@code {
	SiteDto site = new SiteDto();
	string message = "";
	bool? wasSuccess = null;
	string fadeAlert = "";
	bool submitIsActive = true;
	Timer timer;
	bool showSpinner = false;
	bool showModal = false;


	[Parameter, EditorRequired]
	public string Name { get; set; } = "";

	private async Task SubmitForm()
	{
		submitIsActive = false;
		showSpinner = true;
		var response = await httpClient.PostAsJsonAsync<SiteDto>("api/Site", site);
		if (response.IsSuccessStatusCode)
		{
			message = "Uusi ajopaikka on nyt luotu! Kiitos!";
			wasSuccess = true;
			timer = new Timer(5000d);
			timer.AutoReset = false;
			timer.Elapsed += ResetWasSuccess;
			timer.Enabled = true;
		}
		else
		{
			message = $"Voi nakki. Nyt meni metsään. Serveri palautti statuskoodin {response.StatusCode}";
			submitIsActive = true;
			wasSuccess = false;
		}
	}

	private void ToggleModal()
	{
		showModal = !showModal;
	}

	private void ResetWasSuccess(Object source, ElapsedEventArgs e)
	{
		// wasSuccess = null;
		fadeAlert = "fade";
		timer.Enabled = false;
		StateHasChanged();
	}

	private void OnReset()
	{
		site = new SiteDto();
		message = "";
		submitIsActive = true;
	}

}